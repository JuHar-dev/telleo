// Mocks generated by Mockito 5.0.16 from annotations
// in telleo/test/application/blocs/auth/auth_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:telleo/domain/auth/auth_failure.dart' as _i5;
import 'package:telleo/domain/auth/auth_repository.dart' as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i3.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.AuthFailure, _i2.Unit>> signUpWithEmailAndPassword(
          {String? email, String? password}) =>
      (super.noSuchMethod(
              Invocation.method(#signUpWithEmailAndPassword, [],
                  {#email: email, #password: password}),
              returnValue: Future<_i2.Either<_i5.AuthFailure, _i2.Unit>>.value(
                  _FakeEither_0<_i5.AuthFailure, _i2.Unit>()))
          as _i4.Future<_i2.Either<_i5.AuthFailure, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i5.AuthFailure, _i2.Unit>> signInWithEmailAndPassword(
          {String? email, String? password}) =>
      (super.noSuchMethod(
              Invocation.method(#signInWithEmailAndPassword, [],
                  {#email: email, #password: password}),
              returnValue: Future<_i2.Either<_i5.AuthFailure, _i2.Unit>>.value(
                  _FakeEither_0<_i5.AuthFailure, _i2.Unit>()))
          as _i4.Future<_i2.Either<_i5.AuthFailure, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i5.AuthFailure, _i2.Unit>> signInWithGoogle() =>
      (super.noSuchMethod(Invocation.method(#signInWithGoogle, []),
              returnValue: Future<_i2.Either<_i5.AuthFailure, _i2.Unit>>.value(
                  _FakeEither_0<_i5.AuthFailure, _i2.Unit>()))
          as _i4.Future<_i2.Either<_i5.AuthFailure, _i2.Unit>>);
  @override
  String toString() => super.toString();
}
